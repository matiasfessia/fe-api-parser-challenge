{"ast":null,"code":"import _slicedToArray from \"/home/mfessia/fe-api-parser-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _regeneratorRuntime from \"/home/mfessia/fe-api-parser-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/mfessia/fe-api-parser-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _jsxFileName = \"/home/mfessia/fe-api-parser-challenge/src/App.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.scss';\nimport Species from './Species';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar API_URL = 'https://swapi.dev/api/films/';\nvar SPECIES_IMAGES = {\n  droid: 'https://static.wikia.nocookie.net/starwars/images/f/fb/Droid_Trio_TLJ_alt.png',\n  human: 'https://static.wikia.nocookie.net/starwars/images/3/3f/HumansInTheResistance-TROS.jpg',\n  trandoshan: 'https://static.wikia.nocookie.net/starwars/images/7/72/Bossk_full_body.png',\n  wookie: 'https://static.wikia.nocookie.net/starwars/images/1/1e/Chewbacca-Fathead.png',\n  yoda: 'https://static.wikia.nocookie.net/starwars/images/d/d6/Yoda_SWSB.png'\n};\nvar MAP_IMAGES = {\n  Droid: SPECIES_IMAGES.droid,\n  Human: SPECIES_IMAGES.human,\n  Trandoshan: SPECIES_IMAGES.trandoshan,\n  Wookie: SPECIES_IMAGES.wookie,\n  \"Yoda's species\": SPECIES_IMAGES.yoda\n};\nvar CM_TO_IN_CONVERSION_RATIO = 2.54;\nvar parsingResponse = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(response) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return response.json();\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('There was an error parsing the response', _context.t0);\n          return _context.abrupt(\"return\", undefined);\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 6]]);\n  }));\n  return function parsingResponse(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar getFilm = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (id) {\n            _context2.next = 2;\n            break;\n          }\n          return _context2.abrupt(\"return\", undefined);\n        case 2:\n          _context2.prev = 2;\n          _context2.next = 5;\n          return fetch(\"\".concat(API_URL, \"/\").concat(id));\n        case 5:\n          response = _context2.sent;\n          return _context2.abrupt(\"return\", parsingResponse(response));\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](2);\n          console.log('There was an error fetching the film');\n          return _context2.abrupt(\"return\", undefined);\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[2, 9]]);\n  }));\n  return function getFilm(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar changeImageSpecie = function changeImageSpecie() {\n  SPECIES_IMAGES;\n};\nvar getSpeciesFromFilm = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(filmId) {\n    var _yield$getFilm, species, fetchSpecies, responses, payloadResponses, speciesPayload;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          if (filmId) {\n            _context3.next = 2;\n            break;\n          }\n          return _context3.abrupt(\"return\", undefined);\n        case 2:\n          _context3.next = 4;\n          return getFilm(filmId);\n        case 4:\n          _yield$getFilm = _context3.sent;\n          species = _yield$getFilm.species;\n          fetchSpecies = species.map(function (specie) {\n            return new Promise(function (resolve) {\n              return resolve(fetch(specie));\n            });\n          });\n          _context3.prev = 7;\n          _context3.next = 10;\n          return Promise.all(fetchSpecies);\n        case 10:\n          responses = _context3.sent;\n          payloadResponses = responses.map(function (response) {\n            return parsingResponse(response);\n          });\n          _context3.next = 14;\n          return Promise.all(payloadResponses);\n        case 14:\n          speciesPayload = _context3.sent;\n          return _context3.abrupt(\"return\", speciesPayload);\n        case 18:\n          _context3.prev = 18;\n          _context3.t0 = _context3[\"catch\"](7);\n          console.log(\"There were one or more than one species that coudn't be fetched\");\n        case 21:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[7, 18]]);\n  }));\n  return function getSpeciesFromFilm(_x3) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar App = function App() {\n  _s();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    species = _useState2[0],\n    setSpecies = _useState2[1];\n  useEffect(function () {\n    getSpeciesFromFilm(2).then(function (species) {\n      return setSpecies(species);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Empire Strikes Back - Species Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-species\",\n      children: species.map(function (specie) {\n        return /*#__PURE__*/_jsxDEV(Species, {\n          name: specie.name,\n          classification: specie.classification,\n          designation: specie.designation,\n          height: specie.height,\n          image: SPECIES_IMAGES[specie.name.toLowerCase()],\n          numFilms: specie.numFilms,\n          language: specie.language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, _this);\n};\n_s(App, \"GeZlh3Xf+Tq108g7jhucZpcsHk4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Species","API_URL","SPECIES_IMAGES","droid","human","trandoshan","wookie","yoda","MAP_IMAGES","Droid","Human","Trandoshan","Wookie","CM_TO_IN_CONVERSION_RATIO","parsingResponse","response","json","console","log","undefined","getFilm","id","fetch","changeImageSpecie","getSpeciesFromFilm","filmId","species","fetchSpecies","map","specie","Promise","resolve","all","responses","payloadResponses","speciesPayload","App","setSpecies","then","name","classification","designation","height","toLowerCase","numFilms","language"],"sources":["/home/mfessia/fe-api-parser-challenge/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport './App.scss';\nimport Species from './Species';\n\nconst API_URL = 'https://swapi.dev/api/films/';\nconst SPECIES_IMAGES = {\n  droid:\n    'https://static.wikia.nocookie.net/starwars/images/f/fb/Droid_Trio_TLJ_alt.png',\n  human:\n    'https://static.wikia.nocookie.net/starwars/images/3/3f/HumansInTheResistance-TROS.jpg',\n  trandoshan:\n    'https://static.wikia.nocookie.net/starwars/images/7/72/Bossk_full_body.png',\n  wookie:\n    'https://static.wikia.nocookie.net/starwars/images/1/1e/Chewbacca-Fathead.png',\n  yoda: 'https://static.wikia.nocookie.net/starwars/images/d/d6/Yoda_SWSB.png',\n};\n\nconst MAP_IMAGES = {\n  Droid: SPECIES_IMAGES.droid,\n  Human: SPECIES_IMAGES.human,\n  Trandoshan: SPECIES_IMAGES.trandoshan,\n  Wookie: SPECIES_IMAGES.wookie,\n  \"Yoda's species\": SPECIES_IMAGES.yoda,\n};\n\nconst CM_TO_IN_CONVERSION_RATIO = 2.54;\n\nconst parsingResponse = async response => {\n  try {\n    return await response.json();\n  } catch (error) {\n    console.log('There was an error parsing the response', error);\n    return undefined;\n  }\n};\n\nconst getFilm = async id => {\n  if (!id) {\n    return undefined;\n  }\n\n  try {\n    const response = await fetch(`${API_URL}/${id}`);\n    return parsingResponse(response);\n  } catch {\n    console.log('There was an error fetching the film');\n    return undefined;\n  }\n};\n\nconst changeImageSpecie = () => {\n  SPECIES_IMAGES;\n};\n\nconst getSpeciesFromFilm = async filmId => {\n  if (!filmId) {\n    return undefined;\n  }\n\n  const {species} = await getFilm(filmId);\n  const fetchSpecies = species.map(\n    specie => new Promise(resolve => resolve(fetch(specie)))\n  );\n\n  try {\n    const responses = await Promise.all(fetchSpecies);\n    const payloadResponses = responses.map(response =>\n      parsingResponse(response)\n    );\n    const speciesPayload = await Promise.all(payloadResponses);\n    return speciesPayload;\n  } catch (error) {\n    console.log(\n      \"There were one or more than one species that coudn't be fetched\"\n    );\n  }\n};\n\nconst App = () => {\n  const [species, setSpecies] = useState([]);\n\n  useEffect(() => {\n    getSpeciesFromFilm(2).then(species => setSpecies(species));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Empire Strikes Back - Species Listing</h1>\n      <div className=\"App-species\">\n        {species.map(specie => (\n          <Species\n            name={specie.name}\n            classification={specie.classification}\n            designation={specie.designation}\n            height={specie.height}\n            image={SPECIES_IMAGES[specie.name.toLowerCase()]}\n            numFilms={specie.numFilms}\n            language={specie.language}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}