{"ast":null,"code":"import _regeneratorRuntime from \"/home/mfessia/fe-api-parser-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/mfessia/fe-api-parser-challenge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _jsxFileName = \"/home/mfessia/fe-api-parser-challenge/src/App.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport './App.scss';\nimport Species from './Species';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar API_URL = 'https://swapi.dev/api/films/';\nvar getFilm = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(id) {\n    var response;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (id) {\n            _context.next = 2;\n            break;\n          }\n          return _context.abrupt(\"return\", undefined);\n        case 2:\n          _context.prev = 2;\n          _context.next = 5;\n          return fetch(\"\".concat(API_URL, \"/\").concat(id));\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return response.json();\n        case 8:\n          return _context.abrupt(\"return\", _context.sent);\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](2);\n          console.log('There was an error fetching the film');\n          return _context.abrupt(\"return\", undefined);\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[2, 11]]);\n  }));\n  return function getFilm(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar getSpeciesFromFilm = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(filmId) {\n    var _yield$getFilm, species, fetchSpecies, responses, payloadResponses;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (filmId) {\n            _context2.next = 2;\n            break;\n          }\n          return _context2.abrupt(\"return\", undefined);\n        case 2:\n          _context2.next = 4;\n          return getFilm(filmId);\n        case 4:\n          _yield$getFilm = _context2.sent;\n          species = _yield$getFilm.species;\n          // species.forEach(specie => fetch(specie));\n          fetchSpecies = species.map(function (specie) {\n            return new Promise(function (resolve) {\n              return resolve(fetch(specie));\n            });\n          });\n          _context2.prev = 7;\n          _context2.next = 10;\n          return Promise.all(fetchSpecies);\n        case 10:\n          responses = _context2.sent;\n          payloadResponses = responses.map(function (response) {\n            return response.body.json();\n          });\n          console.log('payloadResponses >> ', payloadResponses);\n          return _context2.abrupt(\"return\", payloadResponses);\n        case 16:\n          _context2.prev = 16;\n          _context2.t0 = _context2[\"catch\"](7);\n          console.log(\"There were one or more than one species that coudn't be fetched\");\n        case 19:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[7, 16]]);\n  }));\n  return function getSpeciesFromFilm(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar SPECIES_IMAGES = {\n  droid: 'https://static.wikia.nocookie.net/starwars/images/f/fb/Droid_Trio_TLJ_alt.png',\n  human: 'https://static.wikia.nocookie.net/starwars/images/3/3f/HumansInTheResistance-TROS.jpg',\n  trandoshan: 'https://static.wikia.nocookie.net/starwars/images/7/72/Bossk_full_body.png',\n  wookie: 'https://static.wikia.nocookie.net/starwars/images/1/1e/Chewbacca-Fathead.png',\n  yoda: 'https://static.wikia.nocookie.net/starwars/images/d/d6/Yoda_SWSB.png'\n};\nvar CM_TO_IN_CONVERSION_RATIO = 2.54;\nvar App = function App() {\n  _s();\n  useEffect(function () {\n    getSpeciesFromFilm(2).then(function (_ref3) {\n      var species = _ref3.species;\n      return console.log('species', species);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Empire Strikes Back - Species Listing ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-species\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, _this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Species","API_URL","getFilm","id","undefined","fetch","response","json","console","log","getSpeciesFromFilm","filmId","species","fetchSpecies","map","specie","Promise","resolve","all","responses","payloadResponses","body","SPECIES_IMAGES","droid","human","trandoshan","wookie","yoda","CM_TO_IN_CONVERSION_RATIO","App","then"],"sources":["/home/mfessia/fe-api-parser-challenge/src/App.js"],"sourcesContent":["import {useEffect} from 'react';\nimport './App.scss';\nimport Species from './Species';\n\nconst API_URL = 'https://swapi.dev/api/films/';\n\nconst getFilm = async id => {\n  if (!id) {\n    return undefined;\n  }\n\n  try {\n    const response = await fetch(`${API_URL}/${id}`);\n    return await response.json();\n  } catch {\n    console.log('There was an error fetching the film');\n    return undefined;\n  }\n};\n\nconst getSpeciesFromFilm = async filmId => {\n  if (!filmId) {\n    return undefined;\n  }\n\n  const {species} = await getFilm(filmId);\n  // species.forEach(specie => fetch(specie));\n  const fetchSpecies = species.map(\n    specie => new Promise(resolve => resolve(fetch(specie)))\n  );\n\n  try {\n    const responses = await Promise.all(fetchSpecies);\n    const payloadResponses = responses.map(response => response.body.json());\n    console.log('payloadResponses >> ', payloadResponses);\n\n    return payloadResponses;\n  } catch (error) {\n    console.log(\n      \"There were one or more than one species that coudn't be fetched\"\n    );\n  }\n};\n\nconst SPECIES_IMAGES = {\n  droid:\n    'https://static.wikia.nocookie.net/starwars/images/f/fb/Droid_Trio_TLJ_alt.png',\n  human:\n    'https://static.wikia.nocookie.net/starwars/images/3/3f/HumansInTheResistance-TROS.jpg',\n  trandoshan:\n    'https://static.wikia.nocookie.net/starwars/images/7/72/Bossk_full_body.png',\n  wookie:\n    'https://static.wikia.nocookie.net/starwars/images/1/1e/Chewbacca-Fathead.png',\n  yoda: 'https://static.wikia.nocookie.net/starwars/images/d/d6/Yoda_SWSB.png',\n};\nconst CM_TO_IN_CONVERSION_RATIO = 2.54;\n\nconst App = () => {\n  useEffect(() => {\n    getSpeciesFromFilm(2).then(({species}) => console.log('species', species));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Empire Strikes Back - Species Listing ?</h1>\n      <div className=\"App-species\" />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;;;AAAA,SAAQA,SAAS,QAAO,OAAO;AAC/B,OAAO,YAAY;AACnB,OAAOC,OAAO,MAAM,WAAW;AAAC;AAEhC,IAAMC,OAAO,GAAG,8BAA8B;AAE9C,IAAMC,OAAO;EAAA,sEAAG,iBAAMC,EAAE;IAAA;IAAA;MAAA;QAAA;UAAA,IACjBA,EAAE;YAAA;YAAA;UAAA;UAAA,iCACEC,SAAS;QAAA;UAAA;UAAA;UAAA,OAIOC,KAAK,WAAIJ,OAAO,cAAIE,EAAE,EAAG;QAAA;UAA1CG,QAAQ;UAAA;UAAA,OACDA,QAAQ,CAACC,IAAI,EAAE;QAAA;UAAA;QAAA;UAAA;UAAA;UAE5BC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;UAAC,iCAC7CL,SAAS;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAEnB;EAAA,gBAZKF,OAAO;IAAA;EAAA;AAAA,GAYZ;AAED,IAAMQ,kBAAkB;EAAA,uEAAG,kBAAMC,MAAM;IAAA;IAAA;MAAA;QAAA;UAAA,IAChCA,MAAM;YAAA;YAAA;UAAA;UAAA,kCACFP,SAAS;QAAA;UAAA;UAAA,OAGMF,OAAO,CAACS,MAAM,CAAC;QAAA;UAAA;UAAhCC,OAAO,kBAAPA,OAAO;UACd;UACMC,YAAY,GAAGD,OAAO,CAACE,GAAG,CAC9B,UAAAC,MAAM;YAAA,OAAI,IAAIC,OAAO,CAAC,UAAAC,OAAO;cAAA,OAAIA,OAAO,CAACZ,KAAK,CAACU,MAAM,CAAC,CAAC;YAAA,EAAC;UAAA,EACzD;UAAA;UAAA;UAAA,OAGyBC,OAAO,CAACE,GAAG,CAACL,YAAY,CAAC;QAAA;UAA3CM,SAAS;UACTC,gBAAgB,GAAGD,SAAS,CAACL,GAAG,CAAC,UAAAR,QAAQ;YAAA,OAAIA,QAAQ,CAACe,IAAI,CAACd,IAAI,EAAE;UAAA,EAAC;UACxEC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEW,gBAAgB,CAAC;UAAC,kCAE/CA,gBAAgB;QAAA;UAAA;UAAA;UAEvBZ,OAAO,CAACC,GAAG,CACT,iEAAiE,CAClE;QAAC;QAAA;UAAA;MAAA;IAAA;EAAA,CAEL;EAAA,gBAtBKC,kBAAkB;IAAA;EAAA;AAAA,GAsBvB;AAED,IAAMY,cAAc,GAAG;EACrBC,KAAK,EACH,+EAA+E;EACjFC,KAAK,EACH,uFAAuF;EACzFC,UAAU,EACR,4EAA4E;EAC9EC,MAAM,EACJ,8EAA8E;EAChFC,IAAI,EAAE;AACR,CAAC;AACD,IAAMC,yBAAyB,GAAG,IAAI;AAEtC,IAAMC,GAAG,GAAG,SAANA,GAAG,GAAS;EAAA;EAChB9B,SAAS,CAAC,YAAM;IACdW,kBAAkB,CAAC,CAAC,CAAC,CAACoB,IAAI,CAAC;MAAA,IAAElB,OAAO,SAAPA,OAAO;MAAA,OAAMJ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEG,OAAO,CAAC;IAAA,EAAC;EAC5E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAI;IAAuC;MAAA;MAAA;MAAA;IAAA,SAAK,eAChD;MAAK,SAAS,EAAC;IAAa;MAAA;MAAA;MAAA;IAAA,SAAG;EAAA;IAAA;IAAA;IAAA;EAAA,SAC3B;AAEV,CAAC;AAAC,GAXIiB,GAAG;AAAA,KAAHA,GAAG;AAaT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}